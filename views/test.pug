//- ЗАПУСКАЕТСЯ ИЗ pug_test.js - стр. 110 -139 (Синтаксис PUG)

//- Стр. 5-10  - Вставляем ШАБЛОН - прописанный в test_shablon.pug (в block title  - пишем ЛЮБОЕ НАЗВАНИЕ ТЕКУЩЕЙ СТРАНИЦИ

extends test_shablon.pug 

block title 
  | Cинтаксис PUG-МИКСИНЫ

block content 

  h1.one Синтаксис PUG ,<span style="color:red;">(Шаблоны, Инклюды, Миксины)</span>; Онлайн КОНВЕРТЕР HTML to PUG: https://qna.habr.com/q/494010 <!-- Добавляем класс: class="one">Верстаем на PUG </class=> -->

  h2(id=`my_h4`, class=`test`) Добавляем атрибуты <!-- Добавляем id и класс: <h4 class="test" id="my_h4">Добавлатрибуты</h2> -->

  div 
    p Hello <!-- Вложенность тегов (перед "Р" - пробел Tub) <div><p>Hello</p></div> -->
  hr

  //- _______________________________Теги, Атрибуты, Переменные_______________________________
  h2(class=`test`) Теги, Атрибуты, Переменные

  ul.margin
    -let url ="images/42607960_images_4743479056.jpg"; 
    -let text =`Это ТЕКСТ - как ПЕРЕМЕННАЯ`; //- Передаем в стр.34

    li
      p Это Рисунок <!-- Синтаксис вывода РИСУНОК:   <img src="images/256.png" alt="">  -->
      img(class="myImg" src="images/42607960_images_4743479056.jpg", alt="Рис")
    li
      p Выведем Путь: "images/42607960_images_4743479056.jpg" в Переменную url - стр. 24, 32
      img(class="myImg" src=url, alt="Рис") 
    li 
      p #{text} <!--Это Переменная из стр. 25 -->
      img(class="myImg" src="images/42607960_images_4743479056.jpg", alt="Рис")
  hr

  //- _______________________________     Циклы     _______________________________
  h2(class=`test`) Циклы

  ul.margin
    -let url1 ="images/54573204_images_11323625388.jpg"; //- Передаем в стр.47

    -for(let i = 0; i < 4; i++)
      li <!--пробел чтобы показать, что <li> ОТНОСИТСЯ к - ЦИКЛУ иначе ошибка: !!! -->
        p Выведем ТЕГ li в ЦИКЛЕ; Cчетчик i = #{i} <!-- Передаем ПЕРЕМЕННУЮ i, которая задана в Цикле for() стр. 44-->
        img(class="myImg" src=url1, alt="Рис")

  hr

  //- _______________________________      Массивы     _______________________________
  h2(class=`test`) Массивы

  ul.margin

    -let arr = [`Мне`, 49, `лет`]; 

    //- Метод ПЕРЕБОРА МАССИВОВ (ОБЪЕКТОВ) each в PUG - аналогично перебору Объектов learn_by_heart.html стр. 1484-1523
      for (let key in obj) {
        console.log(key); 
      };   
            
    //- 1) пробел чтобы показать, что <li> ОТНОСИТСЯ к - ЦИКЛУ иначе ошибка: !!! 
    //- 2)  "+(index + 1)*10+" - на каждой итерации - Размер шрифта увеличивается в 10 раз--> 

    each element, index in arr  
      li(style="font-size: "+(index + 1)*10+"px") #{element};  Cчетчик = #{index}  
  hr

  //- _______________________________      Массив - ОБЪЕКТОВ    _______________________________
  h2(class=`test`) Массив - Объектов

  ol(ol type="I" class="margin")

    //- НЕ ЗАБЫВАЕМ про ЧЕРТОЧКУ перед ПЕРЕМЕННОЙ - стр.76 (-let arr_obj = [{}, {}, ....]; )
    -
      let arr_obj = [
        {url: `/`, text: `Главная`},
        {url: `/reg`, text: `Регистрация`},
        {url: `/aut`, text: `Выход`},
        {url: `/page1`, text: `Страница 1`},
        {url: `/page2`, text: `Страница 2`}
      ]; 

    each elem, index in arr_obj
      li
        a(class="footnote" href="elem[`url`]") #{ elem[`text`] }  <!--Выводим в Цикле ссылки по Ключу-url и НазванияКлючу-text; Обязательно Tub (пробел) - иначе ошибка: expected "indent", but got "newline" -->
  hr
  //- ________________________________________________________________________________________

  p #{firstName} <!--Sergii -выводим значение Ключа firstName из Обекта - pug_test.js, стр. 115 -->
  h3 #{lastName} <!--Pedko -выводим значение Ключа lastName из Обекта - app_test.js, стр. 116 -->
  div #{ age() } <!--49 -выводим значение Ф-ции age (Ключа) из Обекта - app_test.js, стр. 117 -->

  hr
  //- _________________________________________________________________________________________

  h2(class=`test`) Выводим Данные из Массива-объектов по Ключу - pug_test.js, стр. 119 

  //- Ключ myGoods - содержит Значение-Объект

  //- Метод ПЕРЕБОРА МАССИВОВ (ОБЪЕКТОВ) each в PUG - аналогично перебору Объектов learn_by_heart.html стр. 1484-1523
      for (let key in obj) {
        console.log(key); 
      };   

  //-  elem, index - это переменные с которыми будем работать внутри перебора Массива(Объекта) - похоже на forEach() в js
  each elem, index in myGoods  
    p(style=`font-weight: bold;`) ID Элемента - #{ elem[`id`] } <!--Выводим в Цикле Названия Товара из Объекта; ОбязателTub (пробел) - иначе ошибка: expected "indent", but got "newline" -->

    p Название: #{ elem[`name`] } 
    p Описание: #{ elem[`description`] } 


    p  <!-- <p>Цена:<span style="color:blue;">10</span/> грн</p>  -->
      | Цена:
      span(style='color:blue;') #{ elem[`cost`] }
      | грн.

    p Категория товара: #{ elem[`category`] } 
  hr

  //- ______________________________Многострочный текст___________________________________________

  h2(class=`test`) Многострочный текст - вариант 1

  .block  <!-- По умолчанию <div class="block">  -->
    | Привет! Этим видео я открываю небольшую рубрику о препроцессоре PUG.
    | Рассмотрим основные функции, которые полезны верстальщику.
    | В этом видео разберем синтаксис pug-конструкций для дальнейшей работы. Поехали! 
  hr
  //-_______________________________________________________________

  h2(class=`test`) Многострочный текст - вариант 2

  //- <p class="block"> 
  p.block. 
    Привет! Этим видео я открываю небольшую рубрику о препроцессоре <b>PUG</b>.
    Рассмотрим основные функции, которые полезны верстальщику.
    В этом видео разберем синтаксис <span style="color: red;" >pug-конструкций</span> для дальнейшей работы. Поехали! 

  //- <span> в синтаксисе-PUG стр. 115-118  
  hr 

   //- ______________________________ МИКСИНЫ (похоже на ф-ции js)  ___________________________________________

  h2(class=`test`) МИКСИНЫ

  //- CОЗДАЕМ Простой Миксин
  mixin list  
    ul 
      li Элемент списка - 1
      li Элемент списка - 2
      li Элемент списка - 3

  //- ВЫЗЫВАЕМ Миксин
  +list

  hr
  //- ВЫЗЫВАЕМ НЕСКОЛЬКО РАЗ ПОДРЯД Миксин
  +list
  +list
  hr

  //- CОЗДАЕМ СЛОЖНЫЙ Миксин nameList - с Аргументом (name); Тегу <li> - присваиваем Аргумент ______

  mixin nameList(name)
    li(style='color:red;')= name 
  //- Обязательно!!! li= (БЕЗ ПРОБЕЛА)

  //- Внутри <ul> - ВЫЗЫВАЕМ НЕСКОЛЬКО РАЗ ПОДРЯД (стр.172-174) Миксин - nameList(name)
  ul 
    +nameList(`Вяся`) 
    +nameList(`Петя`) 
    +nameList(`Коля`)
  hr

  
  //- Необходимо создать миксин - который: 1) Если блок новостей и меет ЗАГОЛОВОК и Текст Новости - все это отобразить
  //-                                      2) Если блок новостей имеет ТОЛЬКО Заголовок - оттобразить ЕГО и РИСУНОК

  //- CОЗДАЕМ СЛОЖНЫЙ Миксин news - с Аргументом (title); Тегу <div class="news-title"> - присваиваем Аргумент

  
  //-  ЕСЛИ <div class="news-text"> - содеожит какой-то БЛОК(Новостей)-стр.192 - Отобразить ЕГО - стр.193
  //-  ИНАЧЕ  - отобразить РИС - стр.194-195

  mixin news(title)
    .news-wrap
      .news-title= title 
      .news-text 
        if block 
           block
        else 
          img(src="images/75093.120x150.jpg")     

  //-   <div class="news-wrap">
  //-     <div class="news-title">Название Новости!!!</div>
  //-     <div class="news-text">
  //-       <p>Текст новост......</p>
  //-     </div>
  //-   </div>


  +news(`ЗАГОЛОВОК - НОВОСТЬ БЕЗ ТЕКСТА`)

  +news(`Біля Арсенальної площі активізувалися будівельні роботи. Що відбувається?`)
    P Перш ніж прочитати матеріал, розгляньте можливість підтримати наше видання. «Хмарочос» пише про розвиток міст 8 років та 212 днів. За цей час ми опублікували 20001 новин та статей і наша редакція продовжує робити цю справу щодня. Вся інформація доступна безкоштовно. 
  
  hr
  //- __________________ Миксин ССЫЛОК _____________________

  mixin link(href,name)
    a(href= href)= name

  P 
   +link(`https://www.npmjs.com/`,`Mенеджер Пакетов - NPM`)

  P 
    +link(`https://www.npmjs.com/package/mysql`,`NPM - MySQL`)
  hr


   //- ____________ Миксин с ЦИКЛАМИ  ________________

  //-  Метод - РЕСТ - Для ф-ций JS - в которых мы НЕ ЗНАЕМ - сколько будет аргументов !!!!

  //-                       let num = (...args) => {
  //-                         return args;
  //-                       };

  //-                       console.log( num (1,2) );  -  вернет массив [1, 2]

  div Миксин - для Социальных Сетей (Особое внимание - Написанию <b>КЛАССОВ</b>)
  
  mixin arrayList(class_name,...args)
    ul(class=``+class_name) 
    
      each element in args 
        li(class=`social-linc__` +element)= element 

  
  +arrayList(`list1`,`vk`, `fb`)

  //- <ul class="list1">
        <li class="social-linc__vk">vk</li>
        <li class="social-linc__fb">fb</li>
      </ul>

  hr
  +arrayList(`list2`,`tw`, `inst`)

  //- <ul class="list2">
        <li class="social-linc__tw">tw</li>
        <li class="social-linc__inst">inst</li>
      </ul>
  hr
  //- _________________________________________________________________________________


  h2(class=`test`) CОЗДАЕМ Миксин - МЕНЮ

  //- СОЗДАЕМ Миксин для <li>__________________________________________________________ 

  mixin elementMenu(isClass, elemObj, indexObj)
    li(class=`menu-list-element ` +isClass)  <!-- element ПРОБЕЛ` - Добавляем 2 КЛАССА: class="menu-list-element is-active" -->

      //- (class=`menu-list-element` +isClass)  - element` - ИЗМЕНЯЕМ Класс: class="menu-list-elementis-active"

      a(target="_blank" class="menu-list-element-a" href=elemObj[`url`]) #{ elemObj[`text`] }
      p счетчик = #{indexObj}  

  //- _____________________________________________________________________________

  nav.menu 
    ul.menu-list.js-menu-button
      -
        let my_Menu = [ 
            {url: `https://www.npmjs.com/`, text: `Mенеджер Пакетов - NPM`},
            {url: `https://www.npmjs.com/package/csv-parser`, text: `NPM CSV-PARSER`},
            {url: `https://www.npmjs.com/package/mysql`, text: `NPM - MySQL`}

          ]; //-  Создаем МАССИВ-ОБЪЕКТОВ  - menu (test.pug стр. 78 - 87). НЕ ЗАБЫВАЕМ про ЧЕРТОЧКУ перед ПЕРЕМЕННОЙ - стр.6   (-let myMenu = [{}, {}, ....]; ) 
      
      -let is_Page = 0; 
      //-  Создаем переменную равную "НУЛЮ - соответственно, сравнив ее со счетчиком массива (nidex =0; стр. 18) - имеем ПЕРВУЮ <li> - затемненную - стр.19 (class="menu-list-element is-active ")

      each elem, index in my_Menu     
            if is_Page == index
              //-   li.menu-list-element.is-active 
              //-     a(target="_blank" class="menu-list-element-a" href=elem[`url`]) #{ elem[`text`] } 
              
              //- Выводим в Цикле ссылки по Ключу-url и Названия по Ключу-text; Обязательно Tub (пробел) - иначе ошибка: expected "indent", but got "newline"

                      p счетчик = #{index}  

              +elementMenu(`is-active`, elem, index) 
              //- стр.296 - ВЫПОЛНЯЕМ МИКСИН  - (заменяет стр. 289-294)

            else 
              //-    li.menu-list-element
              //-       a(target="_blank" class="menu-list-element-a" href=elem[`url`]) #{ elem[`text`] }
              //-       p счетчик = #{index}

              +elementMenu(``, elem, index) 
              //- стр.304 - ВЫПОЛНЯЕМ МИКСИН  - (заменяет стр. 300-302); 
      //- `` - говорит о том, что НИКАКОГО ДОПОЛНИТЕЛЬНОГО КЛАССА (к class=`menu-list-element `) ДОБАВЛЯТЬ НЕ НУЖНО - стр.266
        
      //- Метод ПЕРЕБОРА МАССИВОВ (ОБЪЕКТОВ) each в PUG - аналогично перебору Объектов learn_by_heart.html стр. 1484-152.       for (let key in obj) { console.log(key); };
  hr

      //-__________________________________________________________________________________

  h2(class=`test`) Подключение Миксина - из ДРУГОГО ФАЙЛА

      //- Допустим: mixin news(title) -> находится в ПАПКЕ: menu; в ФАЙЛЕ: template.pug  - ПОДКЛЮЧАЕМ:

      //- 1) include .menu/template.pug (Подключаем САМ ФАЙЛ, в котором Создан Миксин) 
      //- 2) +news(`Закончилась война!!!`) (Выполням Миксин)   

      //- _________________________________________________________________________________
  hr




      